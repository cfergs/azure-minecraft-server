param uniquePrefix string

// container storage
resource storageAccount 'Microsoft.Storage/storageAccounts@2023-05-01' = {
  name: 'minecraft${uniquePrefix}'
  location: resourceGroup().location
  kind: 'StorageV2'
  sku: {
    name: 'Standard_LRS'
  }
}

resource service 'Microsoft.Storage/storageAccounts/fileServices@2023-05-01' = {
  parent: storageAccount
  name: 'default'
}

resource fileShare 'Microsoft.Storage/storageAccounts/fileServices/shares@2023-05-01' = {
  parent: service
  name: 'minecraft'
}

// container
resource containerGroup 'Microsoft.ContainerInstance/containerGroups@2023-05-01' = {
  name: 'containergrp-${uniquePrefix}'
  location: resourceGroup().location
  properties: {
    containers: [
      {
        name: 'minecraft'
        properties: {
          environmentVariables: [
            {
              name: 'ENABLE_ROLLING_LOGS'
              value: 'True'
            }
            {
              name: 'EULA'
              value: 'True'
            }
            {
              name: 'MAX_MEMORY'
              value: '4G'
            }
            {
              name: 'OPS'
              value: 'xtra_sauce'
            }
            {
              name: 'SNOOPER_ENABLED' // don't sent data to snoop.minecraft.net
              value: 'False'
            }
          ]
          image: 'itzg/minecraft-server:latest'
          ports: [
            {
              port: 25565
            }
          ]
          resources: {
            requests: {
              cpu: 2
              memoryInGB: 4
            }
          }
          volumeMounts: [
            {
              name: 'data'
              mountPath: '/data'
            }
          ]
        }
      }
    ]
    restartPolicy: 'OnFailure'
    osType: 'Linux'
    ipAddress: {
      dnsNameLabel: 'minecraft'
      autoGeneratedDomainNameLabelScope: 'TenantReuse'
      type: 'Public'
      ports: [
        {
          protocol: 'TCP'
          port: 25565
        }
      ]
    }
    volumes: [
      {
        name: 'data'
        azureFile: {
          shareName: fileShare.name
          storageAccountName: storageAccount.name
          storageAccountKey: storageAccount.listKeys().keys[0].value
        }
      }
    ]
  }
}
